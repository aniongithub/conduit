name: Release Docker Image

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Generate schema
      run: |
        conduit-generate-schema
        echo "✅ Schema generation completed"
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PAT }}
        
    - name: Extract release version
      id: version
      run: |
        echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/conduit-cli:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/conduit-cli:${{ steps.version.outputs.version }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Update Docker Hub description
      continue-on-error: true
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PAT }}
        repository: ${{ secrets.DOCKERHUB_USERNAME }}/conduit-cli
        short-description: "Streaming, declarative pipelined data processing library for Python"
        readme-filepath: ./README.md

    - name: Test released Docker image
      run: |
        # Test the published image
        docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/conduit-cli:${{ steps.version.outputs.version }} --help
        echo "✅ Released Docker image test passed"
        
    - name: Generate release artifacts
      run: |
        # Copy schema file with version (from the generated location)
        cp src/conduit/schema/pipeline-schema.json conduit-pipeline-schema-${{ steps.version.outputs.version }}.json
        echo "✅ Release artifacts created"
                
    - name: Upload release artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: |
          conduit-pipeline-schema-${{ steps.version.outputs.version }}.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}